#include "./PositionBasedDynamics.cginc"

#define THREADS [numthreads(32, 1, 1)]

#pragma kernel SolveExternalForce
THREADS
void SolveExternalForce(uint3 id: SV_DispatchThreadID)
{
  uint idx = id.x;

  float3 p = particles[idx].predictedPos;
  float3 v = particles[idx].velocity;
  float w = particles[idx].invMass;

  float3 force = gravity / w;

  float3 corr;
  if (ExternalForce(
    deltaT,
    p, v, w,
    force,
    damping,
    corr))
  {
    particles[idx].predictedPos += corr;
  }
}

#pragma kernel SolveDistanceConstraint
THREADS
void SolveDistanceConstraint(uint3 id: SV_DispatchThreadID)
{
  uint idx = id.x;

  int e0 = edges[idx].p0;
  int e1 = edges[idx].p1;
  float restLength = edges[idx].restLength;

  float3 p0 = particles[e0].predictedPos;
  float3 p1 = particles[e1].predictedPos;
  float w0 = particles[e0].invMass;
  float w1 = particles[e1].invMass;

  float3 corr0;
  float3 corr1;
  if (DistanceConstraint(
    p0, w0,
    p1, w1,
    restLength,
    stretchStiffness,
    compressionStiffness,
    corr0,
    corr1))
  {
    particles[e0].predictedPos += corr0;
    particles[e1].predictedPos += corr1;
  }
}

#pragma kernel SolveDihedralConstraint
THREADS
void SolveDihedralConstraint(uint3 id: SV_DispatchThreadID)
{
  // 
}